package LinkedList;



public class SingleLinkedList {
	static Node head;
	static class Node{
		int data;
		Node next;
		public Node(int data) {
			this.data = data;
		}
	}
	
public static void main(String[] args) {
	SingleLinkedList list = new SingleLinkedList();
	list.addFirst(3);
	list.addFirst(6);
	list.addFirst(7);
//	display(head);
	list.addLast(4);
//	display(head);
	list.middleInsert(6,9);
//	display(head);
	list.deleteFirst();
    display(head);
	list.deleteLast();
	//display(head);
}

public Node addFirst(int data) {
	if(head == null) {
		head = new Node(data);
	}else {
		Node new_node = new Node(data);
		new_node.next = head;
		head = new_node;
	}
	
    return head;
}

public static void display(Node head) {
	while(head != null) {
		System.out.print(head.data+" ");
		head = head.next;
	}
}

private Node addLast(int data) {
	Node temp = head;
	Node new_node = new Node(data);
	while (temp != null && temp.next != null){
		temp = temp.next;
	}
	temp.next = new_node;
	return new_node;
}

private Node middleInsert(int previous_node,int data) {
	Node temp = head;
	Node new_node = new Node(data);
	while(temp != null ) {
		if(temp.data == previous_node) {
			new_node.next = temp.next;
			temp.next = new_node;
			temp = temp.next;
		}else
			temp = temp.next;
		
	}
	return new_node;
}

private Node deleteFirst() {
	if(head != null) {
		head = head.next;
	}
	return head;
}

private Node deleteLast() {
	while (head != null) {
		if(head.next.next == null){
			System.out.println(head.data);
			head.next = head.next.next;
	}else 
		head = head.next;
		System.out.println(head.data);
	}
	System.out.println(head.data);
	head.next.next = null;  
	return head;
}

}
